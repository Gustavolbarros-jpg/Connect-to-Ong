generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user_verifications {
  id            String    @id @default(uuid()) @db.Uuid
  user_id       String    @db.Uuid
  unique_string Bytes
  salt          Bytes?
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  expires_at    DateTime  @db.Timestamptz(6)
  user          users     @relation("UserVerifications", fields: [user_id], references: [id])
}

model users {
  id            String               @id @default(uuid()) @db.Uuid
  fullname      String               @db.VarChar(255)
  email         String               @unique @db.VarChar(255)
  institution   String?              @db.VarChar(255)
  password      String               @db.VarChar(255)
  salt          String               @db.VarChar(255)
  verified      Boolean?             @default(false)
  description   String?
  photoUrl      String?
  projetos      projetos[]           @relation("UserProjetos")
  verifications user_verifications[] @relation("UserVerifications")
}

model projetos {
  id                    String   @id @default(uuid()) @db.Uuid
  nome_projeto          String   @db.VarChar(255)
  area_interesse        String   @db.VarChar(255)
  soft_skills           String   @db.VarChar(500)
  quantidade_alunos     Int
  descricao_projeto     String
  professores_atrelados String   @db.VarChar(500)
  horas_extensao        Int
  tempo_previsto        Int
  ong_selecionada       String?  @db.VarChar(255)
  categoria_ong         String?  @db.VarChar(255)
  status                String   @default("Aguardando Conex√£o") @db.VarChar(100)
  created_at            DateTime @default(now()) @db.Timestamptz(6)
  updated_at            DateTime @updatedAt @db.Timestamptz(6)
  user_id               String   @db.Uuid
  user                  users    @relation("UserProjetos", fields: [user_id], references: [id])
}

model ongs {
  id                          Int      @id @default(autoincrement())
  nome_ong                    String?
  motivo_criacao              String?
  sobre                       String?
  responsavel_contato         String?
  cnpj                        String?
  email                       String?  @unique
  quantidade_assistidos       String?
  metas                       String?
  causa_organizacao           String?
  area                        String?
  match_area                  String?
  objetivos_ods               String?
  atividades_projeto_desenvolve String? @map("Atividades_que_o_projeto_desenvolve")
  possui_voluntarios          String?
  possui_funcionarios         String?
  funcionamento               String?
  endereco                    String?
  rpa                         String? // O tipo foi alterado de Float para String
  contato_divulgacao          String?
  redes_sociais               String?
  produto_social              String?
  mensagem_convite            String?
  serve_refeicao              String?
}