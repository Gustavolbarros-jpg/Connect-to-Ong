generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user_verifications {
  id            String   @id @default(uuid()) @db.Uuid
  user_id       String   @db.Uuid
  unique_string Bytes
  salt          Bytes?
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  expires_at    DateTime  @db.Timestamptz(6)

  user          users    @relation("UserVerifications", fields: [user_id], references: [id])
}

model users {
  id            String              @id @default(uuid()) @db.Uuid
  fullname      String              @db.VarChar(255)
  email         String              @unique @db.VarChar(255)
  institution   String?             @db.VarChar(255)
  password      String              @db.VarChar(255)
  salt          String              @db.VarChar(255)
  description   String?
  photoUrl      String?
  verified      Boolean?            @default(false)

  verifications user_verifications[] @relation("UserVerifications")
  projetos      projetos[]          @relation("UserProjetos")
}

model projetos {
  id                    String   @id @default(uuid()) @db.Uuid
  nome_projeto          String   @db.VarChar(255)
  area_interesse        String   @db.VarChar(255)
  soft_skills           String   @db.VarChar(500)
  quantidade_alunos     Int
  descricao_projeto     String   @db.Text
  professores_atrelados String   @db.VarChar(500)
  horas_extensao        Int
  tempo_previsto        Int
  ong_selecionada       String?  @db.VarChar(255)
  categoria_ong         String?  @db.VarChar(255)
  status                String   @default("Aguardando Conex√£o") @db.VarChar(100)
  created_at            DateTime @default(now()) @db.Timestamptz(6)
  updated_at            DateTime @updatedAt @db.Timestamptz(6)
  
  user_id               String   @db.Uuid
  user                  users    @relation("UserProjetos", fields: [user_id], references: [id])
}

